{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Code/laracasts-tutorials/lc-react-testing-todo/src/components/TodoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTodoForm.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n\nfunction TodoForm(props) {\n  _s();\n\n  const [todoInput, setTodoInput] = useState('');\n\n  function handleInput(event) {\n    setTodoInput(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (todoInput.trim().length === 0) {\n      return;\n    }\n\n    props.addTodo(todoInput);\n    setTodoInput('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"#\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: todoInput,\n      onChange: handleInput,\n      className: \"todo-input\",\n      placeholder: \"What do you need to do?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"qmTYRBijNkdkAGveuZavcd4GQyU=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/ryan/Code/laracasts-tutorials/lc-react-testing-todo/src/components/TodoForm.jsx"],"names":["React","useState","PropTypes","TodoForm","propTypes","addTodo","func","isRequired","props","todoInput","setTodoInput","handleInput","event","target","value","handleSubmit","preventDefault","trim","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEAC,QAAQ,CAACC,SAAT,GAAqB;AACnBC,EAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AADL,CAArB;;AAIA,SAASJ,QAAT,CAAkBK,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,WAASU,WAAT,CAAqBC,KAArB,EAA4B;AAC1BF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD;;AAED,WAASC,YAAT,CAAsBH,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAIP,SAAS,CAACQ,IAAV,GAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AACjC;AACD;;AAEDV,IAAAA,KAAK,CAACH,OAAN,CAAcI,SAAd;AAEAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AAED,sBACE;AAAM,IAAA,MAAM,EAAC,GAAb;AAAiB,IAAA,QAAQ,EAAEK,YAA3B;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEN,SAFT;AAGE,MAAA,QAAQ,EAAEE,WAHZ;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9BQR,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nTodoForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nfunction TodoForm(props) {\n  const [todoInput, setTodoInput] = useState('');\n\n  function handleInput(event) {\n    setTodoInput(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (todoInput.trim().length === 0) {\n      return;\n    }\n\n    props.addTodo(todoInput);\n\n    setTodoInput('');\n  }\n\n  return (\n    <form action=\"#\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={todoInput}\n        onChange={handleInput}\n        className=\"todo-input\"\n        placeholder=\"What do you need to do?\"\n      />\n    </form>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}